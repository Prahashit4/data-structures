-->A linked list is a linear data structure that includes a series of connectioned nodes.
-->Each node stores the data and address of the next node.
Example:
––––––––
|head| -> |data|next| -> |data|next| -> ....->NULL

Types of linked lists
---------------------
1)singly linked list
2)doubly linked list
3)circular linked list
4)circular doubly linked lists.

Representation in c++
---------------------
struct node
{
int data;
node *next;
}
Implementation in c++
---------------------
#include<bits/stdc++.h>
using namespace std;
struct node
{
	int data;
	node *next;  //linked list creation
	
	node(int x)
	{
		data=x;
		next=NULL;
	}
};
int main()
{
	int n;
	cin>>n;
	node *head=NULL;
	node *temp=NULL;
	for(int i=0;i<n;i++)
	{
		int m;
		cin>>m;
		if(head==NULL)
		{
			head=temp=new node(m);
		}
		else
		{
			temp->next=new node(m);
			temp=temp->next;
		}
	}
	node *p=head;
	while(p!=NULL)
	{
		cout<<p->data<<" ";
		p=p->next;
	}
	return 0;
}

Operations of Linked list
–––––––––––––––––––––––––
There are five operations in linked list. They are
1)Traversal
2)Insertion
3)Delection
4)search
5)Sort.
----------------------------------------------------------------------------------------------------
Traversal
---------
-->Traversal means access each element in the linked list.
-->In other words we can say visiting or touching the elements in the linked list.

How to display the elements?

-->First we create a structure in the program which is represented as struct
struct node
{
int data;
node *next;
};
-->And then assigning the nodes in the struct
node(int x)
	{
		data=x;
		next=NULL;
	}
-->now assigning the data to the linked list
int n;
	cin>>n;
	node *head=NULL;
	node *temp=NULL;
	for(int i=0;i<n;i++)
	{
		int m;
		cin>>m;
		if(head==NULL)
		{
			head=temp=new node(m);
		}
		else
		{
			temp->next=new node(m);
			temp=temp->next;
		}
	}
	node *p=head;
  -->now the output of the linked list program
  while(p!=NULL)
	{
		cout<<p->data<<" ";
		p=p->next;
	}
  -->output
  1 2 3 4
  1 2 3 4
 ----------------------------------------------------------------------------------------------------
 Insertion
 –––––––––
 --> There are thee insertions:
1)inserting a node in at the head.
2)inserting a node in between two nodes.
3)inserting a node at the end.

